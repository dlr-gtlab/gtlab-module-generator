{
  "name": "GtCalculatorExecInterface",
  "fileName": "gt_calculatorexecinterface",
  "shortName": "Calculator Exec",
  "functions": 
  [
    {
      "name": "executorId",
      "returnValue": "QString",
      "tooltip": "Executor identification string",
      "description":
      [
        "/**",
        " * @brief Returns executor identification string.",
        " * @return Executor identification string.",
        " */"
      ]
    },
    {
      "name": "executorDescription",
      "returnValue": "QString",
      "tooltip": "Executor description",
      "description":
      [
        "/**",
        " * @brief Returns executor description.",
        " * @return Executor description.",
        " */"
      ]
    },
    {
      "name": "executor",
      "returnValue": "QMetaObject",
      "tooltip": "Executor class",
      "description":
      [
        "/**",
        " * @brief Returns meta object of executor.",
        " * @return Meta object of executor.",
        " */"
      ],
      "baseClass":
      {
        "name": "GtAbstractCalculatorExecutor",
        "fileName": "gt_abstractcalculatorexecutor",
        "outputPath": "exec",
        "functions":
        [
          {
            "name": "exec",
            "returnValue": "bool",
            "parameter": "GtCalculator* calculator",
            "tooltip": "",
            "description":
            [
              "/**",
              " * @brief exec",
              " * @return",
              " */"
            ]
          }
        ]
      }
    },
    {
      "name": "executorSettings",
      "returnValue": "QList<GtAbstractProperty*>",
      "tooltip": "List of Executor settings",
      "description":
      [
        "/**",
        " * @brief Returns list of executor settings.",
        " * @return Executor settings.",
        " */"
      ],
      "baseClass":
      {
        "name": "GtAbstractProperty",
        "fileName": "gt_abstractproperty",
        "outputPath": "exec",
        "functions":
        [
          {
            "name": "valueToVariant",
            "returnValue": "QVariant",
            "parameter": "const QString& unit, bool* success = {}",
            "qualifier": "const",
            "description":
            [
              "/**",
              " * @brief valueToVariant",
              " * @return",
              " */"
            ],
            "includes":
            [
              "QVariant"
            ]
          },
          {
            "name": "setValueFromVariant",
            "returnValue": "bool",
            "parameter": "const QVariant& val, const QString& unit, bool* success = {}",
            "tooltip": "",
            "description":
            [
              "/**",
              " * @brief setValueFromVariant",
              " * @param val",
              " * @return",
              " */"
            ]
          }
        ]
      }
    }
  ]
}
