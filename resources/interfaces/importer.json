{
  "name": "GtImporterInterface",
  "fileName": "gt_importerinterface",
  "shortName": "Importer",
  "functions":
  [
    {
      "name": "importer",
      "returnValue": "QList<QMetaObject>",
      "qualifier": "const",
      "tooltip": "List of importers",
      "description":
      [
        "/**",
        " * @brief Returns static meta objects of importer classes.",
        " * @return List including meta objects of importer classes.",
        " */"
      ],
      "baseClass":
      {
        "name": "GtAbstractImporter",
        "fileName": "gt_abstractimporter",
        "outputPath": "importer",
        "functions": 
        [
          {
            "name": "targets",
            "returnValue": "QStringList",
            "qualifier": "const",
            "description":
            [
              "/**",
              " * @brief Returns list of allowed target classes of importer.",
              " * @return List of allowed target classes.",
              " */"
            ]
          },
          {
            "name": "icon",
            "returnValue": "QIcon",
            "qualifier": "const",
            "tooltip": "Icon of importer",
            "description":
            [
              "/**",
              " * @brief Returns icon of importer.",
              " * @return Icon of importer.",
              " */"
            ],
            "includes":
            [
              "gt_application",
              "QIcon"
            ]
          },
          {
            "name": "import",
            "returnValue": "bool",
            "parameter": "GtObject* data, QFile& file",
            "tooltip": "Should the import succeed by default?",
            "description":
            [
              "/**",
              " * @brief Main import function.",
              " * @param Pointer to datamodel member.",
              " * @param Reference to file selected by user.",
              " * @return Whether import successfully finished or not.",
              " */"
            ]
          }
        ]
      }
    }
  ]
}
